buildscript {
    ext {
      springBootVersion = '1.5.3.RELEASE'
    }
	if(System.env.OMAR_COMMON_PROPERTIES)
	{
		apply from: System.env.OMAR_COMMON_PROPERTIES
	}
	repositories {
		mavenLocal()
		maven { url "${ossimMavenProxy}" }
		if( !System.env.WWW_CONNECTED || Boolean.parseBoolean( System.env.WWW_CONNECTED ) ) {
			maven { url "https://repo.grails.org/grails/core" }
		}
	}
	dependencies {
		classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
	}
}

plugins {
  id "com.github.ben-manes.versions" version "0.17.0"
  id "org.sonarqube" version "2.6.2"
}


apply plugin: 'groovy'
apply plugin: 'eclipse'
apply plugin: 'org.springframework.boot'
apply plugin: "idea"
apply plugin: "java"
apply plugin: "maven-publish"
apply plugin: "maven"

sourceCompatibility = 1.8

repositories {
    mavenLocal()
    maven { url "${ossimMavenProxy}" }
	if( !System.env.WWW_CONNECTED || Boolean.parseBoolean( System.env.WWW_CONNECTED ) ) {
    	mavenCentral()
	}
}


ext {
	springCloudVersion = 'Dalston.RELEASE'
}

dependencies {
	compile('org.springframework.boot:spring-boot-starter')
    compile('org.springframework.cloud:spring-cloud-starter-aws')
    compile('org.springframework.cloud:spring-cloud-starter-config')
	compile('org.springframework.cloud:spring-cloud-starter-aws-messaging')
	compile('org.springframework.cloud:spring-cloud-stream-binder-kafka')
	compile('org.codehaus.groovy:groovy')
	compile('org.codehaus.groovy:groovy-json')
    compile('org.codehaus.groovy:groovy-xml')
    compile("org.ossim:joms:1.9.0-${buildVersionTag}")
    compile('org.slf4j:slf4j-api:1.7.21')
	testCompile('org.springframework.boot:spring-boot-starter-test')
}

dependencyManagement {
	imports {
		mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
	}
}
publishing {
	publications {
		mavenJava(MavenPublication) {
			from components.java
		}
	}
}
